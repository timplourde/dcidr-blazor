@page "/options"
@inject DcidrAppModel AppModel
@using Dcidr.BlazorWasm.Shared
@inject NavigationManager NavigationManager

    <div class="fade-in">
        <h1>Enter your options</h1>

        <p class="mb-3">

            For example, if you were planning a family vacation,
            your options might be <strong>beach</strong> or <strong>camping</strong>.
            Five or fewer options is ideal.

        </p>

        <hr />

        <div class="input-group mb-3 input-group-container">
            <input type="text" class="form-control" @bind="newOptionInput" @onkeyup="OnNewItemKeyup" maxlength="50"
                   placeholder="Add an option">
            <div class="input-group-append">
                <button class="btn btn-secondary" @onclick="AddOption" type="button" title="Add">

                    <img src="images/plus-circle.svg" />

                </button>
            </div>
        </div>


        @if (AppModel.Decision.Options.Items.Count() == 0)
        {
            <div class="p-1">
                <em>At least two options are required to proceed.</em>
            </div>
        }
        else
        {
            <ul class="decision-item-list">
                @foreach (var option in AppModel.Decision.Options.Items)
                {
                    <DecisionItem @key="@option" Item="@option" OnDelete="@( () => AppModel.Decision.Options.Remove(option))" />
                }
            </ul>
        }


        <hr />


        <div class="d-flex justify-content-between  mb-3">

            <NavLink class="d-btn" href="/" title="Home">
                <img src="images/arrow-left.svg" />
                Home
            </NavLink>

            @if (AppModel.Decision.HasEnoughOptions)
            {
                <NavLink class="d-btn d-btn-primary" title="Continue" href="criteria">
                    Continue <Dcidr.BlazorWasm.Shared.InlineSvg.ArrowRight />
                </NavLink>
            }
        </div>

        <DecisionDebug />
    </div>



@code {
    private string? newOptionInput;

    private void AddOption()
    {
        if (!string.IsNullOrWhiteSpace(newOptionInput))
        {
            AppModel.Decision.Options.Add(newOptionInput.Trim());
            newOptionInput = String.Empty;
        }
    }

    private void OnNewItemKeyup(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            AddOption();
        }
    }
}
